// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RdsDatabaseRunningScheduler Specific Testing specify schedule Should match snapshot 1`] = `
{
  "Mappings": {
    "ServiceprincipalMap": {
      "af-south-1": {
        "states": "states.af-south-1.amazonaws.com",
      },
      "ap-east-1": {
        "states": "states.ap-east-1.amazonaws.com",
      },
      "ap-northeast-1": {
        "states": "states.ap-northeast-1.amazonaws.com",
      },
      "ap-northeast-2": {
        "states": "states.ap-northeast-2.amazonaws.com",
      },
      "ap-northeast-3": {
        "states": "states.ap-northeast-3.amazonaws.com",
      },
      "ap-south-1": {
        "states": "states.ap-south-1.amazonaws.com",
      },
      "ap-south-2": {
        "states": "states.ap-south-2.amazonaws.com",
      },
      "ap-southeast-1": {
        "states": "states.ap-southeast-1.amazonaws.com",
      },
      "ap-southeast-2": {
        "states": "states.ap-southeast-2.amazonaws.com",
      },
      "ap-southeast-3": {
        "states": "states.ap-southeast-3.amazonaws.com",
      },
      "ap-southeast-4": {
        "states": "states.ap-southeast-4.amazonaws.com",
      },
      "ca-central-1": {
        "states": "states.ca-central-1.amazonaws.com",
      },
      "cn-north-1": {
        "states": "states.cn-north-1.amazonaws.com",
      },
      "cn-northwest-1": {
        "states": "states.cn-northwest-1.amazonaws.com",
      },
      "eu-central-1": {
        "states": "states.eu-central-1.amazonaws.com",
      },
      "eu-central-2": {
        "states": "states.eu-central-2.amazonaws.com",
      },
      "eu-north-1": {
        "states": "states.eu-north-1.amazonaws.com",
      },
      "eu-south-1": {
        "states": "states.eu-south-1.amazonaws.com",
      },
      "eu-south-2": {
        "states": "states.eu-south-2.amazonaws.com",
      },
      "eu-west-1": {
        "states": "states.eu-west-1.amazonaws.com",
      },
      "eu-west-2": {
        "states": "states.eu-west-2.amazonaws.com",
      },
      "eu-west-3": {
        "states": "states.eu-west-3.amazonaws.com",
      },
      "il-central-1": {
        "states": "states.il-central-1.amazonaws.com",
      },
      "me-central-1": {
        "states": "states.me-central-1.amazonaws.com",
      },
      "me-south-1": {
        "states": "states.me-south-1.amazonaws.com",
      },
      "sa-east-1": {
        "states": "states.sa-east-1.amazonaws.com",
      },
      "us-east-1": {
        "states": "states.us-east-1.amazonaws.com",
      },
      "us-east-2": {
        "states": "states.us-east-2.amazonaws.com",
      },
      "us-gov-east-1": {
        "states": "states.us-gov-east-1.amazonaws.com",
      },
      "us-gov-west-1": {
        "states": "states.us-gov-west-1.amazonaws.com",
      },
      "us-iso-east-1": {
        "states": "states.amazonaws.com",
      },
      "us-iso-west-1": {
        "states": "states.amazonaws.com",
      },
      "us-isob-east-1": {
        "states": "states.amazonaws.com",
      },
      "us-west-1": {
        "states": "states.us-west-1.amazonaws.com",
      },
      "us-west-2": {
        "states": "states.us-west-2.amazonaws.com",
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "NotificationTopicEB7A0DF1": {
      "Properties": {
        "DisplayName": "RDS DB Running Schedule Notification Topic",
        "TopicName": "rds-db-running-schedule-notification-313cb41a-topic",
      },
      "Type": "AWS::SNS::Topic",
    },
    "SchedulerExecutionRole0AF092B7": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "scheduler.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "RDS DB Running scheduler role",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "states:StartExecution",
                  "Effect": "Allow",
                  "Resource": {
                    "Ref": "StateMachine2E01A3A5",
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "state-machine-exec-policy",
          },
        ],
        "RoleName": "rds-db-running-scheduler-313cb41a-exec-role",
      },
      "Type": "AWS::IAM::Role",
    },
    "StartDatabaseRunningSchedule": {
      "Properties": {
        "Description": "start db instance schedule.",
        "FlexibleTimeWindow": {
          "Mode": "OFF",
        },
        "Name": "rds-database-running-start-313cb41a-schedule",
        "ScheduleExpression": "cron(55 8 ? * MON-FRI *)",
        "ScheduleExpressionTimezone": "Asia/Tokyo",
        "State": "ENABLED",
        "Target": {
          "Arn": {
            "Ref": "StateMachine2E01A3A5",
          },
          "Input": "{"Params":{"TagKey":"WorkHoursRunning","TagValues":["YES"],"Mode":"Start"}}",
          "RetryPolicy": {
            "MaximumEventAgeInSeconds": 60,
            "MaximumRetryAttempts": 0,
          },
          "RoleArn": {
            "Fn::GetAtt": [
              "SchedulerExecutionRole0AF092B7",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::Scheduler::Schedule",
    },
    "StateMachine2E01A3A5": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "StateMachineRoleDefaultPolicyDF1E6607",
        "StateMachineRoleB840431D",
      ],
      "Properties": {
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{"StartAt":"InitStateListDefinition","States":{"InitStateListDefinition":{"Type":"Pass","Result":[{"name":"AVAILABLE","emoji":"ðŸ¤©","state":"available"},{"name":"STOPPED","emoji":"ðŸ˜´","state":"stopped"}],"ResultPath":"$.definition.stateList","Next":"GetResources"},"GetResources":{"Next":"ResourceProcessingMap","Type":"Task","ResultPath":"$.Result","ResultSelector":{"TargetResources.$":"$..ResourceTagMappingList[*].ResourceARN"},"Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::aws-sdk:resourcegroupstaggingapi:getResources","Parameters":{"ResourceTypeFilters":["rds:db","rds:cluster"],"TagFilters":[{"Key.$":"$.Params.TagKey","Values.$":"$.Params.TagValues"}]}},"ResourceProcessingMap":{"Type":"Map","End":true,"Parameters":{"TargetResource.$":"$$.Map.Item.Value","params.$":"$.Params","definition.$":"$.definition"},"ItemsPath":"$.Result.TargetResources","ItemProcessor":{"ProcessorConfig":{"Mode":"INLINE"},"StartAt":"GetIdentifier","States":{"GetIdentifier":{"Type":"Pass","ResultPath":"$.Result.target","Parameters":{"identifier.$":"States.ArrayGetItem(States.StringSplit($.TargetResource, ':'), 6)","type.$":"States.ArrayGetItem(States.StringSplit($.TargetResource, ':'), 5)"},"Next":"DescribeTypeChoice"},"DescribeTypeChoice":{"Type":"Choice","Choices":[{"Variable":"$.Result.target.type","StringEquals":"db","Next":"DescribeDBInstances"},{"Variable":"$.Result.target.type","StringEquals":"cluster","Next":"DescribeDBClusters"}],"Default":"UnknownType"},"StatusChangeWait":{"Type":"Wait","Seconds":60,"Next":"DescribeTypeChoice"},"StartDBInstance":{"Next":"StatusChangeWait","Type":"Task","ResultPath":"$.Result.StartDBInstance","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::aws-sdk:rds:startDBInstance","Parameters":{"DbInstanceIdentifier.$":"$.Result.target.identifier"}},"StatusChoice":{"Type":"Choice","Choices":[{"And":[{"Variable":"$.params.Mode","StringEquals":"Start"},{"Variable":"$.Result.target.type","StringEquals":"db"},{"Variable":"$.Result.status.current","StringEquals":"stopped"}],"Next":"StartDBInstance"},{"And":[{"Variable":"$.params.Mode","StringEquals":"Stop"},{"Variable":"$.Result.target.type","StringEquals":"db"},{"Variable":"$.Result.status.current","StringEquals":"available"}],"Next":"StopDBInstance"},{"And":[{"Variable":"$.params.Mode","StringEquals":"Start"},{"Variable":"$.Result.target.type","StringEquals":"cluster"},{"Variable":"$.Result.status.current","StringEquals":"stopped"}],"Next":"StartDBCluster"},{"And":[{"Variable":"$.params.Mode","StringEquals":"Stop"},{"Variable":"$.Result.target.type","StringEquals":"cluster"},{"Variable":"$.Result.status.current","StringEquals":"available"}],"Next":"StopDBCluster"},{"Or":[{"And":[{"Variable":"$.params.Mode","StringEquals":"Start"},{"Or":[{"Variable":"$.Result.target.type","StringEquals":"db"},{"Variable":"$.Result.target.type","StringEquals":"cluster"}]},{"Variable":"$.Result.status.current","StringEquals":"available"}]},{"And":[{"Variable":"$.params.Mode","StringEquals":"Stop"},{"Or":[{"Variable":"$.Result.target.type","StringEquals":"db"},{"Variable":"$.Result.target.type","StringEquals":"cluster"}]},{"Variable":"$.Result.status.current","StringEquals":"stopped"}]}],"Next":"PrepareTopicValue"},{"Or":[{"And":[{"And":[{"Variable":"$.params.Mode","StringEquals":"Start"},{"Or":[{"Variable":"$.Result.target.type","StringEquals":"db"},{"Variable":"$.Result.target.type","StringEquals":"cluster"}]},{"Or":[{"Variable":"$.Result.status.current","StringEquals":"starting"},{"Variable":"$.Result.status.current","StringEquals":"configuring-enhanced-monitoring"},{"Variable":"$.Result.status.current","StringEquals":"backing-up"},{"Variable":"$.Result.status.current","StringEquals":"modifying"}]}]}]},{"And":[{"And":[{"Variable":"$.params.Mode","StringEquals":"Stop"},{"Or":[{"Variable":"$.Result.target.type","StringEquals":"db"},{"Variable":"$.Result.target.type","StringEquals":"cluster"}]},{"Or":[{"Variable":"$.Result.status.current","StringEquals":"modifying"},{"Variable":"$.Result.status.current","StringEquals":"stopping"}]}]}]}],"Next":"StatusChangeWait"}],"Default":"StatusFail"},"StatusFail":{"Type":"Fail","Cause":"db instance or cluster status fail."},"StopDBInstance":{"Next":"StatusChangeWait","Type":"Task","ResultPath":"$.Result.StopDBInstance","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::aws-sdk:rds:stopDBInstance","Parameters":{"DbInstanceIdentifier.$":"$.Result.target.identifier"}},"StartDBCluster":{"Next":"StatusChangeWait","Type":"Task","ResultPath":"$.Result.StartDBCluster","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::aws-sdk:rds:startDBCluster","Parameters":{"DbClusterIdentifier.$":"$.Result.target.identifier"}},"StopDBCluster":{"Next":"StatusChangeWait","Type":"Task","ResultPath":"$.Result.StopDBCluster","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::aws-sdk:rds:stopDBCluster","Parameters":{"DbClusterIdentifier.$":"$.Result.target.identifier"}},"PrepareTopicValue":{"Type":"Pass","ResultPath":"$.prepare.topic.values","Parameters":{"emoji.$":"States.ArrayGetItem($.definition.stateList[?(@.state == $.Result.status.current)].emoji, 0)","status.$":"States.ArrayGetItem($.definition.stateList[?(@.state == $.Result.status.current)].name, 0)","account.$":"States.ArrayGetItem(States.StringSplit($.TargetResource, ':'), 4)","region.$":"States.ArrayGetItem(States.StringSplit($.TargetResource, ':'), 3)"},"Next":"GenerateTopic"},"GenerateTopic":{"Type":"Pass","ResultPath":"$.Generate.Topic","Parameters":{"Subject.$":"States.Format('{} [{}] AWS RDS DB {} Running Notification [{}][{}]', $.prepare.topic.values.emoji, $.prepare.topic.values.status, $.params.Mode, $.prepare.topic.values.account, $.prepare.topic.values.region)","TextMessage.$":"States.Format('Account : {}\\nRegion : {}\\nType : {}\\nIdentifier : {}\\nStatus : {}', $.prepare.topic.values.account, $.prepare.topic.values.region, $.Result.target.type, $.Result.target.identifier, $.prepare.topic.values.status)","SlackJsonMessage":{"attachments":[{"color":"#36a64f","pretext.$":"States.Format('{} The status of the RDS {} changed to {} due to the schedule.', $.prepare.topic.values.emoji, $.Result.target.type, $.prepare.topic.values.status)","fields":[{"title":"Account","value.$":"$.prepare.topic.values.account","short":true},{"title":"Region","value.$":"$.prepare.topic.values.region","short":true},{"title":"Type","value.$":"$.Result.target.type","short":true},{"title":"Identifier","value.$":"$.Result.target.identifier","short":true},{"title":"Status","value.$":"$.prepare.topic.values.status","short":true}]}]}},"Next":"SendNotification"},"SendNotification":{"Next":"StateChangeSucceed","Type":"Task","ResultPath":"$.snsResult","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::sns:publish","Parameters":{"TopicArn":"",
              {
                "Ref": "NotificationTopicEB7A0DF1",
              },
              "","Message":{"default.$":"$.Generate.Topic.TextMessage","email.$":"$.Generate.Topic.TextMessage","lambda.$":"States.JsonToString($.Generate.Topic.SlackJsonMessage)"},"MessageStructure":"json","Subject.$":"$.Generate.Topic.Subject"}},"StateChangeSucceed":{"Type":"Succeed"},"UnknownType":{"Type":"Fail"},"DescribeDBInstances":{"Next":"StatusChoice","Type":"Task","ResultPath":"$.Result.status","ResultSelector":{"current.$":"$.DbInstances[0].DbInstanceStatus"},"Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::aws-sdk:rds:describeDBInstances","Parameters":{"DbInstanceIdentifier.$":"$.Result.target.identifier"}},"DescribeDBClusters":{"Next":"StatusChoice","Catch":[{"ErrorEquals":["Rds.DbClusterNotFoundException"],"Next":"HandleDbClusterNotFound"}],"Type":"Task","ResultPath":"$.Result.status","ResultSelector":{"current.$":"$.DbClusters[0].Status"},"Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::aws-sdk:rds:describeDBClusters","Parameters":{"DbClusterIdentifier.$":"$.Result.target.identifier"}},"HandleDbClusterNotFound":{"Type":"Pass","Result":{"message":"DB Cluster not found, but continuing..."},"End":true}}},"MaxConcurrency":10}}}",
            ],
          ],
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "StateMachineRoleB840431D",
            "Arn",
          ],
        },
        "StateMachineName": "rds-db-running-schedule-313cb41a-state-machine",
      },
      "Type": "AWS::StepFunctions::StateMachine",
      "UpdateReplacePolicy": "Delete",
    },
    "StateMachineRoleB840431D": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::FindInMap": [
                    "ServiceprincipalMap",
                    {
                      "Ref": "AWS::Region",
                    },
                    "states",
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "RDS DB Running machine role.",
        "RoleName": "rds-db-running-schedule-313cb41a-state-machine-role",
      },
      "Type": "AWS::IAM::Role",
    },
    "StateMachineRoleDefaultPolicyDF1E6607": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "tag:GetResources",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "rds:startDBInstance",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:rds:*:",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":db:*",
                  ],
                ],
              },
            },
            {
              "Action": "rds:stopDBInstance",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:rds:*:",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":db:*",
                  ],
                ],
              },
            },
            {
              "Action": "rds:startDBCluster",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:rds:*:",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":cluster:*",
                  ],
                ],
              },
            },
            {
              "Action": "rds:stopDBCluster",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:rds:*:",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":cluster:*",
                  ],
                ],
              },
            },
            {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Resource": {
                "Ref": "NotificationTopicEB7A0DF1",
              },
            },
            {
              "Action": "rds:describeDBInstances",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:rds:*:",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":db:*",
                  ],
                ],
              },
            },
            {
              "Action": "rds:describeDBClusters",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:rds:*:",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":cluster:*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "rds-db-running-schedule-313cb41a-state-machine-policy",
        "Roles": [
          {
            "Ref": "StateMachineRoleB840431D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "StopDatabaseRunningSchedule": {
      "Properties": {
        "Description": "stop database(instance/cluster) running stop schedule.",
        "FlexibleTimeWindow": {
          "Mode": "OFF",
        },
        "Name": "rds-database-running-stop-313cb41a-schedule",
        "ScheduleExpression": "cron(5 19 ? * MON-FRI *)",
        "ScheduleExpressionTimezone": "Asia/Tokyo",
        "State": "ENABLED",
        "Target": {
          "Arn": {
            "Ref": "StateMachine2E01A3A5",
          },
          "Input": "{"Params":{"TagKey":"WorkHoursRunning","TagValues":["YES"],"Mode":"Stop"}}",
          "RetryPolicy": {
            "MaximumEventAgeInSeconds": 60,
            "MaximumRetryAttempts": 0,
          },
          "RoleArn": {
            "Fn::GetAtt": [
              "SchedulerExecutionRole0AF092B7",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::Scheduler::Schedule",
    },
    "SubscriptionEmail000D00CED5E": {
      "Properties": {
        "Endpoint": "foo@example.com",
        "Protocol": "email",
        "TopicArn": {
          "Ref": "NotificationTopicEB7A0DF1",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "SubscriptionEmail0018E4254ED": {
      "Properties": {
        "Endpoint": "bar@example.net",
        "Protocol": "email",
        "TopicArn": {
          "Ref": "NotificationTopicEB7A0DF1",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
